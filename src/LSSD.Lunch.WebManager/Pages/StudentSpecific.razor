@page "/students/{id}"
@using Services

@code {
    
    [Inject]
    StudentService _repo { get; set; }

    [Inject]
    SchoolService _schoolrepo { get; set; }
    
    [Inject]
    NavigationManager NavigationManager { get; set; }

    [Parameter]
    public string id { get; set; }

    Student thisObj = null;


    protected override void OnInitialized()
    {
        if (id != (new Guid()).ToString()) {
            thisObj = _repo.Get(id);
        } else {
            thisObj = new Student();
        }
    }

    protected void HandleInValidSubmit()
    {
        // Do nothing
    }

    protected void HandleValidSubmit()
    {
        // Save
        _repo.InsertOrUpdate(thisObj);
        
        // Navigate back 
        NavigationManager.NavigateTo("/students");
    }

    protected void OnClick_Delete(Student thisObj)
    {
        // Save
        _repo.Delete(thisObj);
        
        // Navigate back 
        NavigationManager.NavigateTo("/students");
    }

}

<AuthorizeView Context="user">
    <Authorized>
      
    <div class="container">

    @if(thisObj != null) {
        <EditForm Model="@thisObj" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInValidSubmit">
        <div class="form-group">
            <div class="row">
                <div class="col-sm-3">ID</div>
                <div class="col-sm-6">@thisObj.Id.ToString()</div>
            </div>
            <div class="form-group row">
                <label for="resourceName" class="col-sm-3">Name: </label>
                <InputText id="resourceName" class="form-control col-sm-8" @bind-Value="@thisObj.Name"></InputText>
                <ValidationMessage class="offset-sm-3 col-sm-68" For="@(() => thisObj.Name)" />
            </div>
            
            <div class="form-group row">
                <label for="resourceName" class="col-sm-3">Student ID: </label>
                <InputText id="resourceName" class="form-control col-sm-8" @bind-Value="@thisObj.StudentId"></InputText>
                <ValidationMessage class="offset-sm-3 col-sm-68" For="@(() => thisObj.StudentId)" />
            </div>

            
            <div class="form-group row">
                <label for="resourceName" class="col-sm-3">Medical: </label>
                <InputTextArea id="resourceName" class="form-control col-sm-8" @bind-Value="@thisObj.MedicalInfo"></InputTextArea>
                <ValidationMessage class="offset-sm-3 col-sm-68" For="@(() => thisObj.MedicalInfo)" />
            </div>

            
            <div class="form-group row">
                <label for="resourceSchool" class="col-sm-3">School: </label>
                <InputSelect  id="resourceSchool" class="form-control col-sm-8" @bind-Value="@thisObj.SchoolId">
                    <option value="@(new Guid())">-</option>
                    @foreach (School school in _schoolrepo.GetAll())
                    {
                        <option value="@(school.Id)">@(school.Name)</option>
                    }
                </InputSelect>
                <ValidationMessage class="offset-sm-3 col-sm-68" For="@(() => thisObj.SchoolId)" />
            </div>

        </div>
        <div class="form-group">
            <div class="form-row">                
                <div class="col">
                    <button type="button" class="btn btn-danger btn-block" @onclick="() => OnClick_Delete(thisObj)">Delete</button>
                </div>
                <div class="col"></div>
                <div class="col">
                    <button type="submit" class="btn btn-primary btn-block">Save</button>
                </div>
            </div>
        </div>

        </EditForm>
    } else {
        <i>Object not found</i>
    }
</div>
    </Authorized>
</AuthorizeView>